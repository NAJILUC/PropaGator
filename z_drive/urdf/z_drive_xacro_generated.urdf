<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from z_drive.xacro                  | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="z_drive_system" xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller" xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" xmlns:xacro="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface">
  <!-- This file describes a simple Unified Robot Description Format (URDF) for the z_drive system, that is generated by Xacro (XML Macros) language -->
  <!-- To generate a URDF from this file run "rosrun xacro xacro.py z_drive.xacro > z_drive_xacro_generated.urdf"-->
  <!-- To see a simple interaction of it, start "roscore" and then run the command "roslaunch urdf_tutorial display.launch model:=z_drive_xacro_generated.urdf gui:=true" -->
  <!-- For more info on URDF tags see: http://wiki.ros.org/urdf/XML-->
  <!-- For more info on xacro see: http://goo.gl/nE33uo or http://wiki.ros.org/xacro -->
  <!-- These folowing defined macro(s) will be used to automaticly create the z_drive system -->
  <!-- Macro constants -->
  <!-- Default Materials that are used -->
  <material name="blue">
    <color rgba="0 0 1 .125"/>
  </material>
  <material name="red">
    <color rgba="1.0 0 0 .5"/>
  </material>
  <material name="green">
    <color rgba="0 1 0 .5"/>
  </material>
  <!-- Link Macros -->
  <!-- the visual_geometry can be made of a mesh that is very detailed. -->
  <!-- collision_geometry should be as simple as possible.-->
  <!-- Macro to create an entire thruster. Note: the "*origin" should be a URDF "origin" tag that is the location of the thruster relative to the base_link -->
  <!-- start of the urdf that will be generated -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="3 2 1"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <!-- the "${system_name}_base" will be instantiated from the base_link of the robot-->
  <link name="z_drive_base"/>
  <!-- to instantiate the "${system_name}_base" from the base_link of the robot we need a fixed joint-->
  <joint name="base_link_to_z_drive_base" type="fixed">
    <parent link="base_link"/>
    <child link="z_drive_base"/>
    <origin xyz="0 0 0"/>
  </joint>
  <!-- create a port servo located at the specified location-->
  <link name="port_thruster">
    <visual>
      <material name="red"/>
      <geometry>
        <box size=".5 .25 .25"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size=".5 .25 .25"/>
      </geometry>
    </collision>
  </link>
  <link name="port_prop">
    <visual>
      <material name="red"/>
      <origin rpy="0 1.57079632679 0" xyz="-.25 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.125"/>
      </geometry>
    </visual>
  </link>
  <joint name="port_servo" type="revolute">
    <parent link="z_drive_base"/>
    <child link="port_thruster"/>
    <origin rpy="0 0 0" xyz="-.7239 .3048 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="6.0" lower="0" upper="6.283185" velocity="6.597344565"/>
  </joint>
  <joint name="port_thruster_to_prop" type="prismatic">
    <parent link="port_thruster"/>
    <child link="port_prop"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="-1 0 0"/>
    <limit effort="1" lower="0" upper="1" velocity="1"/>
  </joint>
  <!-- create a starboard servo located at the specified location-->
  <link name="starboard_thruster">
    <visual>
      <material name="green"/>
      <geometry>
        <box size=".5 .25 .25"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size=".5 .25 .25"/>
      </geometry>
    </collision>
  </link>
  <link name="starboard_prop">
    <visual>
      <material name="green"/>
      <origin rpy="0 1.57079632679 0" xyz="-.25 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.125"/>
      </geometry>
    </visual>
  </link>
  <joint name="starboard_servo" type="revolute">
    <parent link="z_drive_base"/>
    <child link="starboard_thruster"/>
    <origin rpy="0 0 0" xyz="-.7239 -.3048 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="6.0" lower="0" upper="6.283185" velocity="6.597344565"/>
  </joint>
  <joint name="starboard_thruster_to_prop" type="prismatic">
    <parent link="starboard_thruster"/>
    <child link="starboard_prop"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="-1 0 0"/>
    <limit effort="1" lower="0" upper="1" velocity="1"/>
  </joint>
</robot>

