#!/usr/bin/python

import threading

import serial

import roslib
roslib.load_manifest('power_router')
import rospy
from std_msgs.msg import Header

from power_router.msg import prstatus
from power_router.srv import SetKill, SetKillResponse


rospy.init_node('power_router')


class PowerRouter(object):
    
    def __init__(self, port):
        self._serial = serial.Serial(port, 9600)
    
    def read(self):
		while True:
			string  = self._serial.readline()

			splt = string.split(",")

			if (len(splt) == 4):
				try:
					computercurrent = float(splt[0])
					motorcurrent = float(splt[1])
					temperature = float(splt[2])
					battery = float(splt[3])
					return motorcurrent, computercurrent, temperature, battery
				except ValueError:
					print "bad_data"
    

ad = PowerRouter(rospy.get_param('~port'))

def setkill(req):
    if req.kill:
	ad._serial.write("H")
    else:
	ad._serial.write("G")
    return SetKillResponse()
rospy.Service('~setkill', SetKill, setkill)

pub = rospy.Publisher('~status', prstatus)
while not rospy.is_shutdown():
    motorcurrent, computercurrent, temperature, battery = ad.read()
      
    pub.publish(prstatus(
    	header=Header(
        stamp=rospy.Time.now(),
            ),
            motorcurrent=motorcurrent, computercurrent=computercurrent, temperature=temperature, battery=battery
        ))
